Encoding Summary Report
======================

This report summarizes the encoding process applied to the Instacart and M5 Walmart datasets, including the methodology, rationale, and details of what was encoded.

------------------------------------------------------------

Why Encoding is Needed
----------------------
- Most machine learning models require all input features to be numeric.
- Categorical variables (such as product categories, store types, etc.) must be converted to numbers so that models can interpret and use them.
- Encoding ensures that categorical information is preserved and made usable for both tree-based and linear models.

------------------------------------------------------------

Encoding Methodology
--------------------
Two main encoding techniques were used:

1. **Label Encoding**
   - Assigns each unique category a unique integer value.
   - Suitable for tree-based models (e.g., Random Forest, XGBoost, LightGBM).
   - Example: Type (A=0, B=1, C=2)

2. **One-Hot Encoding**
   - Creates a new binary column for each category.
   - Suitable for linear models and neural networks.
   - Example: Type_A, Type_B, Type_C columns (1 if that type, else 0)

------------------------------------------------------------

Instacart Dataset
-----------------
- **Columns Encoded:**
  - `eval_set` (train, test, prior)
  - `aisle` (product aisle)
  - `department` (product department)
- **Label Encoding:**
  - `eval_set_encoded`, `aisle_encoded`, `department_encoded` columns created.
- **One-Hot Encoding:**
  - One-hot columns for `eval_set`, `aisle`, and `department` created.
- **Files Saved:**
  - `orders_encoded.csv`, `products_encoded.csv` (label encoded)
  - `orders_onehot.csv`, `products_onehot.csv` (one-hot encoded)

------------------------------------------------------------

M5 Walmart Dataset
------------------
- **Columns Encoded:**
  - `Type` (store type: A, B, C)
  - `Store_Size_Bucket` (Small, Medium, Large)
- **Label Encoding:**
  - `Type_encoded`, `Store_Size_Bucket_encoded` columns created.
- **One-Hot Encoding:**
  - One-hot columns for `Type` and `Store_Size_Bucket` created.
- **Files Saved:**
  - `train_encoded.csv` (label encoded)
  - `train_onehot.csv` (one-hot encoded)

------------------------------------------------------------

**Note:**
- Label encoding is generally preferred for tree-based models, while one-hot encoding is better for linear models.
- Encoding was performed after feature engineering and before model training to ensure all features are numeric and ready for ML algorithms.
- The same encoding should be applied to any new or test data before making predictions. 